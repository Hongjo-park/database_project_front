{"ast":null,"code":"var _jsxFileName = \"/Users/hongjo/Documents/tennis-demo-frontend/login-form/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = formData;\n    if (!email || !password) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n    console.log('로그인 요청:', {\n      email,\n      password\n    });\n    setError('');\n    alert('로그인 성공!');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      backgroundColor: '#fff' // 전체 배경 하얀색으로 설정\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 2,\n        width: '100%',\n        maxWidth: 400,\n        padding: 3,\n        backgroundColor: '#fff',\n        // 로그인 창 배경색도 하얀색으로 설정\n        borderRadius: 2,\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)' // 그림자 유지\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 2,\n          fontWeight: 'bold',\n          color: '#4a90e2'\n        },\n        children: \"ACCOUNT LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          variant: \"outlined\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          variant: \"outlined\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"LOG IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"xXN82lk70W93bXaRlVuUBGUyW+4=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","Alert","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","alert","sx","display","flexDirection","alignItems","justifyContent","height","backgroundColor","children","gap","width","maxWidth","padding","borderRadius","boxShadow","variant","mb","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","label","onChange","fullWidth","required","type","severity","_c","$RefreshReg$"],"sources":["/Users/hongjo/Documents/tennis-demo-frontend/login-form/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert } from '@mui/material';\n\nconst LoginPage: React.FC = () => {\n  const [formData, setFormData] = useState({ email: '', password: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { email, password } = formData;\n\n    if (!email || !password) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n\n    console.log('로그인 요청:', { email, password });\n    setError('');\n    alert('로그인 성공!');\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#fff', // 전체 배경 하얀색으로 설정\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 2,\n          width: '100%',\n          maxWidth: 400,\n          padding: 3,\n          backgroundColor: '#fff', // 로그인 창 배경색도 하얀색으로 설정\n          borderRadius: 2,\n          boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', // 그림자 유지\n        }}\n      >\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 'bold', color: '#4a90e2' }}>\n          ACCOUNT LOGIN\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            width: '100%',\n          }}\n        >\n          <TextField\n            label=\"Email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            variant=\"outlined\"\n            fullWidth\n            required\n          />\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            variant=\"outlined\"\n            fullWidth\n            required\n          />\n          {error && <Alert severity=\"error\">{error}</Alert>}\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            LOG IN\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}