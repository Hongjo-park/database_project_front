{"ast":null,"code":"var _jsxFileName = \"/Users/hongjo/Documents/tennis-demo-frontend/login-form/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = formData;\n\n    // TODO : 로그인 요청 처리 (예: API 호출)\n    if (!email || !password) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n    console.log('로그인 요청:', {\n      email,\n      password\n    });\n    setError('');\n    alert('로그인 성공!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"xXN82lk70W93bXaRlVuUBGUyW+4=\");\n_c = LoginPage;\nconst styles = {\n  container: {\n    padding: '20px',\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n    maxWidth: '300px',\n    margin: '0 auto'\n  },\n  error: {\n    color: 'red',\n    fontWeight: 'bold'\n  }\n};\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","alert","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","type","onChange","required","_c","padding","textAlign","display","flexDirection","gap","maxWidth","margin","color","fontWeight","$RefreshReg$"],"sources":["/Users/hongjo/Documents/tennis-demo-frontend/login-form/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst LoginPage = () => {\n  const [formData, setFormData] = useState({ email: '', password: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { email, password } = formData;\n\n    // TODO : 로그인 요청 처리 (예: API 호출)\n    if (!email || !password) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }   \n\n    console.log('로그인 요청:', { email, password });\n    setError('');\n    alert('로그인 성공!');\n  };\n\n  return (\n    <div style={styles.container}>\n      <h2>Account Login</h2>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n        {error && <p style={styles.error}>{error}</p>}\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  container: {\n    padding: '20px',\n    textAlign: 'center' as const,\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column' as const,\n    gap: '10px',\n    maxWidth: '300px',\n    margin: '0 auto',\n  },\n  error: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}