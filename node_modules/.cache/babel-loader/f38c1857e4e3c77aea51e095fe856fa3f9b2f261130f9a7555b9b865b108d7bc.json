{"ast":null,"code":"var _jsxFileName = \"/Users/hongjo/Documents/tennis_review_frontend/src/pages/RacquetPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Grid, Card, CardActionArea, CardMedia, List, ListItem, ListItemButton, ListItemText, Drawer } from '@mui/material';\nimport apiClient from '../utils/api'; // apiClient 불러오기\n\n// API 호출 시 받아올 라켓 데이터 타입 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RacquetPage = () => {\n  _s();\n  const {\n    brand\n  } = useParams(); // URL 파라미터로 전달받은 브랜드명\n  const navigate = useNavigate(); // URL 변경을 위한 네비게이션\n  const [racquets, setRacquets] = useState([]);\n\n  // 좌측 브랜드 리스트\n  const brandList = ['Wilson', 'Babolat', 'Head', 'Prince', 'Yonex'];\n\n  // API 호출 함수\n  const fetchRacquets = async brandName => {\n    try {\n      const response = await apiClient.get(`/racquets`, {\n        params: {\n          brand: brandName\n        }\n      });\n      setRacquets(response.data); // 라켓 데이터 상태 업데이트\n    } catch (error) {\n      console.error('Failed to fetch racquets:', error);\n    }\n  };\n\n  // URL 변경에 따라 데이터 가져오기\n  useEffect(() => {\n    if (brand) {\n      fetchRacquets(brand); // URL에 해당하는 브랜드 데이터 가져오기\n    }\n  }, [brand]);\n\n  // 브랜드 클릭 시 URL 변경 및 데이터 호출\n  const handleBrandClick = brandName => {\n    navigate(`/racquet/${brandName.toLowerCase()}`); // URL을 변경\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      anchor: \"left\",\n      sx: {\n        width: 200,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: 200,\n          boxSizing: 'border-box',\n          top: 64 // Header 높이에 맞춤\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: brandList.map(brandName => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => handleBrandClick(brandName),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: brandName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, brandName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        textAlign: 'center',\n        p: 4,\n        ml: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 4,\n          fontWeight: 'bold'\n        },\n        children: brand ? `${brand.charAt(0).toUpperCase() + brand.slice(1)} Tennis Racquets` : 'Tennis Racquets'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        justifyContent: \"center\",\n        children: racquets.map(racquet => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                image: racquet.image_url // Backend에서 제공한 image_url 사용\n                ,\n                alt: racquet.name,\n                sx: {\n                  height: 400,\n                  objectFit: 'big',\n                  p: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, racquet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), racquets.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"textSecondary\",\n        sx: {\n          mt: 4\n        },\n        children: \"\\uD604\\uC7AC \\uBE0C\\uB79C\\uB4DC\\uC758 \\uB77C\\uCF13 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(RacquetPage, \"VIvotF8HYG98kS6XMrfxZQ/Yn8A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RacquetPage;\nexport default RacquetPage;\nvar _c;\n$RefreshReg$(_c, \"RacquetPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Typography","Grid","Card","CardActionArea","CardMedia","List","ListItem","ListItemButton","ListItemText","Drawer","apiClient","jsxDEV","_jsxDEV","RacquetPage","_s","brand","navigate","racquets","setRacquets","brandList","fetchRacquets","brandName","response","get","params","data","error","console","handleBrandClick","toLowerCase","sx","display","children","variant","anchor","width","flexShrink","boxSizing","top","map","disablePadding","onClick","primary","fileName","_jsxFileName","lineNumber","columnNumber","flex","textAlign","p","ml","mb","fontWeight","charAt","toUpperCase","slice","container","spacing","justifyContent","racquet","item","xs","sm","md","lg","component","image","image_url","alt","name","height","objectFit","id","length","color","mt","_c","$RefreshReg$"],"sources":["/Users/hongjo/Documents/tennis_review_frontend/src/pages/RacquetPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Drawer,\n} from '@mui/material';\nimport apiClient from '../utils/api'; // apiClient 불러오기\n\n// API 호출 시 받아올 라켓 데이터 타입 정의\ninterface Racquet {\n  id: number;\n  name: string;\n  image_url: string;\n  manufacturer: string;\n}\n\nconst RacquetPage: React.FC = () => {\n  const { brand } = useParams<{ brand: string }>(); // URL 파라미터로 전달받은 브랜드명\n  const navigate = useNavigate(); // URL 변경을 위한 네비게이션\n  const [racquets, setRacquets] = useState<Racquet[]>([]);\n\n  // 좌측 브랜드 리스트\n  const brandList = ['Wilson', 'Babolat', 'Head', 'Prince', 'Yonex'];\n\n  // API 호출 함수\n  const fetchRacquets = async (brandName: string) => {\n    try {\n      const response = await apiClient.get(`/racquets`, {\n        params: { brand: brandName },\n      });\n      setRacquets(response.data); // 라켓 데이터 상태 업데이트\n    } catch (error) {\n      console.error('Failed to fetch racquets:', error);\n    }\n  };\n\n  // URL 변경에 따라 데이터 가져오기\n  useEffect(() => {\n    if (brand) {\n      fetchRacquets(brand); // URL에 해당하는 브랜드 데이터 가져오기\n    }\n  }, [brand]);\n\n  // 브랜드 클릭 시 URL 변경 및 데이터 호출\n  const handleBrandClick = (brandName: string) => {\n    navigate(`/racquet/${brandName.toLowerCase()}`); // URL을 변경\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      {/* 좌측 브랜드 리스트 */}\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        sx={{\n          width: 200,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: 200,\n            boxSizing: 'border-box',\n            top: 64, // Header 높이에 맞춤\n          },\n        }}\n      >\n        <List>\n          {brandList.map((brandName) => (\n            <ListItem key={brandName} disablePadding>\n              <ListItemButton onClick={() => handleBrandClick(brandName)}>\n                <ListItemText primary={brandName} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      {/* 메인 컨텐츠 */}\n      <Box sx={{ flex: 1, textAlign: 'center', p: 4, ml: '200px' }}>\n        {/* 브랜드명 헤더 */}\n        <Typography variant=\"h4\" sx={{ mb: 4, fontWeight: 'bold' }}>\n          {brand ? `${brand.charAt(0).toUpperCase() + brand.slice(1)} Tennis Racquets` : 'Tennis Racquets'}\n        </Typography>\n\n        {/* 라켓 목록 */}\n        <Grid container spacing={4} justifyContent=\"center\">\n          {racquets.map((racquet) => (\n            <Grid item key={racquet.id} xs={12} sm={6} md={4} lg={3}>\n              <Card>\n                <CardActionArea>\n                  {/* 라켓 이미지 */}\n                  <CardMedia\n                    component=\"img\"\n                    image={racquet.image_url} // Backend에서 제공한 image_url 사용\n                    alt={racquet.name}\n                    sx={{ height: 400, objectFit: 'big', p: 0 }}\n                  />\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n\n        {/* 데이터가 없을 경우 메시지 */}\n        {racquets.length === 0 && (\n          <Typography variant=\"h6\" color=\"textSecondary\" sx={{ mt: 4 }}>\n            현재 브랜드의 라켓 정보가 없습니다.\n          </Typography>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default RacquetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}