{"ast":null,"code":"var _jsxFileName = \"/Users/hongjo/Documents/tennis_review_frontend/src/pages/RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert, Container } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../utils/api'; // Axios 인스턴스 사용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n    if (!name || !email || !password || !confirmPassword) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n    try {\n      await apiClient.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      setError('');\n      setSuccess('회원가입에 성공했습니다! 로그인 페이지로 이동합니다.');\n      setTimeout(() => navigate('/login'), 1500); // 1.5초 후 로그인 페이지로 이동\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || '회원가입에 실패했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        p: 3,\n        backgroundColor: 'white',\n        borderRadius: 2,\n        boxShadow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 4,\n          color: '#4a90e2'\n        },\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          width: '100%',\n          maxWidth: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 2\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"9yNDBaa4E+in67CijQS5E70YalU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","Alert","Container","useNavigate","apiClient","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","formData","setFormData","name","email","password","confirmPassword","error","setError","success","setSuccess","handleChange","e","target","value","handleSubmit","preventDefault","post","setTimeout","err","_err$response","_err$response$data","response","data","message","maxWidth","sx","mt","children","display","flexDirection","alignItems","p","backgroundColor","borderRadius","boxShadow","variant","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","width","margin","fullWidth","label","onChange","required","type","severity","_c","$RefreshReg$"],"sources":["/Users/hongjo/Documents/tennis_review_frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert, Container } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../utils/api'; // Axios 인스턴스 사용\n\nconst RegisterPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const { name, email, password, confirmPassword } = formData;\n\n    if (!name || !email || !password || !confirmPassword) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    try {\n      await apiClient.post('/auth/register', { name, email, password });\n      setError('');\n      setSuccess('회원가입에 성공했습니다! 로그인 페이지로 이동합니다.');\n      setTimeout(() => navigate('/login'), 1500); // 1.5초 후 로그인 페이지로 이동\n    } catch (err: any) {\n      setError(err.response?.data?.message || '회원가입에 실패했습니다.');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          p: 3,\n          backgroundColor: 'white',\n          borderRadius: 2,\n          boxShadow: 1,\n        }}\n      >\n        <Typography variant=\"h4\" sx={{ mb: 4, color: '#4a90e2' }}>\n          Sign Up\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            width: '100%',\n            maxWidth: '400px',\n          }}\n        >\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            required\n          />\n          {error && <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>}\n          {success && <Alert severity=\"success\" sx={{ mt: 2 }}>{success}</Alert>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            SIGN UP\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}